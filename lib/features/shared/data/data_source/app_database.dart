import 'dart:io';

import 'package:drift/drift.dart';
import 'package:drift/native.dart';
import 'package:path_provider/path_provider.dart';
import 'package:quiz_app/features/messages/data/model/message_tables.dart';
import 'package:path/path.dart' as p;
import 'package:quiz_app/features/messages/domain/entity/message.dart';

// Generated by drift_dev when running `build_runner build`
part 'app_database.g.dart';

@DriftDatabase(tables: [MessageEntries])
class AppDatabase extends _$AppDatabase {
  AppDatabase() : super(_openConnection());

  AppDatabase.connect(DatabaseConnection connection) : super.connect(connection);

  Future<List<MessageEntry>> fetchMessages() => select(messageEntries).get();

  Future addMessage(MessageEntry message) => into(messageEntries).insert(message);

  @override
  int get schemaVersion => 1;
}

LazyDatabase _openConnection() {
  // the LazyDatabase util lets us find the right location for the file async.
  return LazyDatabase(() async {
    // put the database file, called db.sqlite here, into the documents folder
    // for your app.
    final dbFolder = await getApplicationDocumentsDirectory();
    final file = File(p.join(dbFolder.path, 'db.sqlite'));
    return NativeDatabase(file);
  });
}
